#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ REST polling Bitget
–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ orderbook —á–µ—Ä–µ–∑ ExchangeConnector
"""

import asyncio
import time
from exchange_connector import ExchangeConnector
from production_config import TRADING_CONFIG

async def test_bitget_rest_polling():
    """–¢–µ—Å—Ç REST polling –¥–ª—è Bitget"""
    
    print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ExchangeConnector...")
    connector = ExchangeConnector(mode=TRADING_CONFIG['mode'])
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        await connector.initialize()
        print("‚úÖ ExchangeConnector –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–µ –ø–∞—Ä—ã
        test_pairs = ['BTC/USDT', 'ETH/USDT', 'SOL/USDT']
        
        print(f"\nüì° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ REST polling Bitget –¥–ª—è –ø–∞—Ä: {test_pairs}")
        
        for i in range(10):  # 10 —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ü–∏–∫–ª–æ–≤
            print(f"\n--- –¶–∏–∫–ª {i+1}/10 ---")
            
            for symbol in test_pairs:
                try:
                    start_time = time.time()
                    
                    # –ü–æ–ª—É—á–∞–µ–º orderbook —á–µ—Ä–µ–∑ REST
                    orderbook = await connector.fetch_orderbook('bitget', symbol)
                    
                    elapsed_time = (time.time() - start_time) * 1000  # –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
                    
                    if orderbook and orderbook.get('bids') and orderbook.get('asks'):
                        best_bid = orderbook['bids'][0][0] if orderbook['bids'] else None
                        best_ask = orderbook['asks'][0][0] if orderbook['asks'] else None
                        
                        print(f"  ‚úÖ {symbol}: bid={best_bid:.6f}, ask={best_ask:.6f} ({elapsed_time:.1f}ms)")
                    else:
                        print(f"  ‚ùå {symbol}: –ø—É—Å—Ç–æ–π orderbook")
                        
                except Exception as e:
                    print(f"  ‚ö†Ô∏è {symbol}: –æ—à–∏–±–∫–∞ - {e}")
            
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ü–∏–∫–ª–∞–º–∏
            await asyncio.sleep(2)
        
        print("\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        
    finally:
        # –ó–∞–∫—Ä—ã—Ç–∏–µ
        await connector.close()
        print("üîå ExchangeConnector –∑–∞–∫—Ä—ã—Ç")

if __name__ == "__main__":
    asyncio.run(test_bitget_rest_polling())
